
# -------- general --------

unbind r
bind r source-file ~/.tmux.conf \; display "Configuration Reloaded!"
 

set -g default-terminal "screen-256color"
if 'infocmp -x tmux-256color > /dev/null 2>&1' 'set -g default-terminal "tmux-256color"'

setw -g xterm-keys on
set  -s escape-time 1            # faster command sequences
set  -sg repeat-time 600         # increase repeat timeout
set  -s focus-events on

set  -q -g status-utf8 on        # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on

set -g history-limit 5000        # boost history

set -g mouse on                  # start with mouse mode enabled

# force Vi mode
set -g status-keys vi
set -g mode-keys vi


# -------- display --------

set -g base-index 1              # start windows numbering at 1
setw -g pane-base-index 1        # make pane numbering consistent with windows

setw -g automatic-rename off     # rename window to reflect current program
set -g renumber-windows on       # renumber windows when a window is closed
setw -g allow-rename off

set -g set-titles on             # set terminal title

set -g display-panes-time 800    # slightly longer pane indicators display time
set -g display-time 1000         # slightly longer status messages display time

set -g status-interval 15        # redraw status line every 10 seconds

# activity
set -g monitor-activity off
set -g visual-activity off


# -------- navigation -------

bind C-c new-session             # create session

# find session
# bind C-f command-prompt -p find-session 'switch-client -t %%'

# session navigation
bind BTab switch-client -l       # move to last session

# Popup selector that shows all sessions
# bind C-j display-popup -E "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# split current window horizontally
# bind - split-window -v
# split current window vertically
# bind _ split-window -h

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# window navigation
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window


# -------- copy mode -------

# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'

# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'

# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'


# -------- clipboard -------

# in copy mode, copying selection also copies to the OS clipboard
#   - true
#   - false (default)
#   - disabled
# on macOS, this requires installing reattach-to-user-namespace, see README.md
# on Linux, this requires xsel or xclip
tmux_conf_copy_to_os_clipboard=true

# paste from system clipboard
# if -b 'command -v xclip > /dev/null 2>&1' 'bind p run " tmux set‐buffer \"$(xclip ‐o ‐sel clipboard)\"; tmux paste‐buffer"'


# -------- buffers -------

# bind bl list-buffers  # list paste buffers
# bind bp paste-buffer  # paste from the top paste buffer
# bind bc choose-buffer # choose which buffer to paste from
  

# -------- statusbar --------

set -g status-bg white
set -g status-left-length 80
# set -g status-justify left

set -g status-left "#[fg=black][#S] #[fg=cyan]#I #[fg=black]#P#[default]"
set -g status-right "#(hostname) | #[fg=black]%d %b %R "
# set -g status-right '#(hostname)#(date +" %m-%d %H:%M ")'
 
# window title string (uses statusbar variables)
# set -g set-titles-string '#T'
# set -g status-justify "left"
# set -g window-status-format '#I #W'
# set -g window-status-current-format ' #I #W '

# set -g monitor-activity on
# set -g visual-activity on
# set -g status-position top     # move status line to top

set -wg window-status-current-style "bg=cyan fg=black"
# set -wg window-status-last-style "fg=red"
 
# -------- plugin setting --------

# clipboard
tmux_conf_copy_to_os_clipboard=true

set -g @continuum-boot 'on'` 
set -g @continuum-restore 'on'
set -g @resurrect-strategy-vim 'session'

# sidebar
# run some other command in the sidebar
# set -g @sidebar-tree-command 'ls -1'
# set -g @sidebar-tree-position 'right'
set -g @sidebar-tree-width '60'


# -------- plugin setting --------

set -g @plugin 'tmux-plugins/tpm'

set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-logging'

set -g @plugin 'tmux-plugins/tmux-copycat'


# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

